#usda 1.0
(
    upAxis = "Y"
    '''This file is used to demonstrate how expression variables can be passed to usdrecord
    on the command-line.  It will set them on the stage's session layer, allowing them to
    be used in asset-valued attribute resolution.

    In this file, the variable ${TEXTURE} is used to indicate a texture filename.'''
)

def Mesh "card" (
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    rel material:binding = </PreviewMaterial>

    point3f[] points = [
        (0, 0, 0),
        (1, 0, 0),
        (0, 1, 0),
        (1, 1, 0),
    ]
    float2[] primvars:st (interpolation = "vertex")
    float2[] primvars:st = [
        (0, 0),
        (1, 0),
        (0, 1),
        (1, 1)
    ]
    int[] faceVertexIndices = [
        0, 1, 3, 2
    ]
    int[] faceVertexCounts = [
        4
    ]
    uniform token subdivisionScheme = "none"
}

def Material "PreviewMaterial"
{
    add token outputs:surface.connect = </PreviewMaterial/PreviewSurface.outputs:surface>

    def Shader "PreviewSurface"
    {
        token info:id = "UsdPreviewSurface"
        color3f inputs:emissiveColor.connect = </PreviewMaterial/ColorAndOpacityTexture.outputs:rgb>
        token outputs:surface
    }

    def Shader "UV"
    {
        token info:id = "UsdPrimvarReader_float2"
        string inputs:varname = "st"
        float2 outputs:result
    }

    def Shader "ColorAndOpacityTexture"
    {
        token info:id = "UsdUVTexture"
        asset inputs:file = @`"${TEXTURE}.tex"`@
        float2 inputs:st.connect = </PreviewMaterial/UV.outputs:result>
        color3f outputs:rgb
    }
}
